{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	//版本信息
	"版本信息": { //代码段名称
		"prefix": "version", //触发关键词
		"body": [
			"#!/usr/bin/python3",
			"# -*- coding : utf-8 -*-",
			"##########################################################",
			"#",
			"#       Filename:   $TM_FILENAME",
			"#         Author:   yujie",
			"#    Description:   $TM_FILENAME",
			"#        Version:   ${1|1.0,2.0,3.0|}",
			"#           Time:   $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"#  Last Modified:   $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"#        Contact:   hi@arcsona.cn",
			"#        License:   GNU General Public License v3.0",
			"#",
			"##########################################################",
			"$0",
		],
		"description": "版本信息"
	},
	//当前时间
	"当前时间": { //代码段名称
		"prefix": "currenttime", //触发关键词
		"body": [
			"$CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"$0",
		],
		"description": "当前时间"
	},
	//导入库
	"ml often import": {
		"prefix": "mlimport",
		"body": [
			"import os",
			"import sys",
			"import pandas as pd",
			"import numpy as np ",
			"from tqdm import tqdm,trange",
			"from matplotlib import pyplot as plt",
			"import seaborn as sns",
			"import json",
			"import pathlib",
			"from pathlib import Path",
			"$0"
		],
		"description": "ml often import"
	},
	"引用的库": {
		"prefix": "oftenimport",
		"body": [
			"from Bio import SeqIO",
			"from Bio.Seq import Seq",
			"#from humre import *  # 正则",
			"#from icecream import ic  # 打印",
			"import argparse  # 命令行",
			"import linecache  # 大文件行读取",
			"import os  # 目录路径",
			"#import pretty_errors  # 错误提示",
			"import re  # 正则",
			"import sys",
			"import time",
			"import copy  # 深度拷贝",
			"import pandas as pd",
			"import numpy as np",
			"import matplotlib.pyplot as plt",
			"$0",
		],
		"description": "引用的库"
	},
	//交互模板
	"交互模板": {
		"prefix": "userinterface",
		"body": [
			"parser = argparse.ArgumentParser(",
			"add_help=False, usage='\\n\\",
			"\\n\\",
			"##########################################################\\n\\",
			"#\\n\\",
			"#       Filename:   $TM_FILENAME\\n\\",
			"#         Author:   yujie\\n\\",
			"#    Description:   $TM_FILENAME\\n\\",
			"#        Version:   ${4|1.0,2.0,3.0|}\\n\\",
			"#           Time:   $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND\\n\\",
			"#  Last Modified:   $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND\\n\\",
			"#        Contact:   hi@arcsona.cn\\n\\",
			"#        License:   GNU General Public License v3.0\\n\\",
			"#\\n\\",
			"##########################################################\\n\\",
			"\\n\\",
			"\\npython3   ${1:$TM_FILENAME}\\n\\",
			"Function:\\n\\",
			"1.常规使用\\n\\",
			"1.1 -i [ ] -o [ ] \\n\\",
			"2.其他使用\\n\\",
			"2.1 -i [ ] -o [ ] \\n\\",
			"\\n\\",
			"##########################################################\\n\\",
			"Path: $TM_FILEPATH\\n\\",
			"Path: /share/nas1/yuj/script/${2|chloroplast,mitochondrion,Denovo|}/${3|assembly,annotation,advance,phytree|}/$TM_FILENAME\\n\\",
			"Version: ${4|1.0,2.0,3.0|}\\n\\",
			"##########################################################\\n\\",
			"'",
			")",
			"optional = parser.add_argument_group('可选项')",
			"required = parser.add_argument_group('必选项')",
			"optional.add_argument('-i', '--${5|infile,indir,instr|}',metavar='[${5|infile,indir,instr|}]', help='${5|infile,indir,instr|}', type=str, default='E:/', required=False)",
			"optional.add_argument('-o', '--${6|outfile,outdir|}',metavar='[${6|outfile,outdir|}]', help='${6|outfile,outdir|}', type=str, default='F:/', required=False)",
			"optional.add_argument('-c1', '--flag1', help='run step 1?默认是,不运行则-c1',action='store_false', required=False)",
			"optional.add_argument('-c2', '--flag2', help='run step 2?默认否,运行则-c2 ',action='store_true', required=False)",
			"optional.add_argument('-info', help='更新日志,使用时-info',action='store_true', required=False)",
			"optional.add_argument('-h', '--help', action='help', help='[help_information]')",
			"args = parser.parse_args()",
			"",
			"if args.info:",
			"\tprint('\\n更新日志:')",
			"\tprint('\\t$CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE  XXX')",
			"\tprint('\\n')",
			"\tsys.exit(0)",
			"$0",
		],
		"description": "交互模板"
	},
	//主函数
	"主函数": {
		"prefix": "main",
		"body": [
			"if __name__ == '__main__':",
			"\t$0",
		],
		"description": "主函数"
	},
	//时间模板
	"运行时间": {
		"prefix": "runtime",
		"body": [
			"#################################################################",
			"# 格式化成2016-03-20 11: 45: 39形式",
			"start_time = time.time()",
			"print('Start Time : {}'.format(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())))",
			"#################################################################",
			"$0",
			"###############################################################",
			"print('End Time : {}'.format(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())))",
			"print('Already Run {}s'.format(time.time()-start_time))",
			"print('Done')",
			"###############################################################",
		],
		"description": "运行时间"
	},
	//log,不确定啥用
	"logging basic template": {
		"prefix": "logtemplate",
		"body": [
			"import logging",
			"logging.basicConfig(",
			"format='%(asctime)s - %(name)s - %(levelname)s -%(module)s: %(message)s',",
			"datefmt='%Y-%m-%d %H:%M:%S %p',",
			"level=logging.INFO,",
			")",
		],
		"description": "logging temlate"
	},
	"logging.info": {
		"prefix": "linfo",
		"body": [
			"logging.info('$1')",
			"$2"
		],
		"description": "logging info"
	},
	//文件读取
	"读文件": {
		"prefix": "file",
		"body": [
			"with open(${1:文件全路径}) as 文件:",
			"\t内容 = 文件.read()"
		],
		"description": "读取某文件"
	},
	"读所有文件": {
		"prefix": "files",
		"body": [
			"import os",
			"路径 = '.'",
			"for 文件名 in os.listdir(路径):",
			"\twith open(os.path.join(路径, 文件名)) as 文件:",
			"\t\t内容 = 文件.read()"
		],
		"description": "读取某目录下所有文件"
	},
}
